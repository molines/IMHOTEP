#!/bin/bash
##     ***  script  function_moy  ***
##  define functions for DMONTOOLS/MOY_PROD scripts
## =====================================================================
## History : 1.0  !  2008     J.M. Molines      Original  code
##           2.0  !  2012     all contrib       Rationalization
## ----------------------------------------------------------------------
##  DMONTOOLS_2.0 , MEOM 2012
##  $Id: function_moy 540 2012-12-19 14:08:40Z molines $
##  Copyright (c) 2012, J.-M. Molines
##  Software governed by the CeCILL licence (Licence/DMONTOOLSCeCILL.txt)
## ----------------------------------------------------------------------
##
## machine dependent functions : each machine has its own set of functions
## supported machine : jade, ada, ulam, vargas
##
##############################################################################
NC4=${NC4:=0}
if [ $NC4 = 1 ] ; then NCOPT='-nc4' ; fi

VVL=${VVLL:=0}
if [ $VVL = 1 ] ; then VVLOPT='-vvl' ; fi

# all machines: use : TYP_LIST=$(get_typ_list)
get_typ_list() {
       for f in *.nc ; do echo ${f%.nc} | awk -F_ '{print $NF}' ; done | sort -u
               }

case $MACHINE in

##############################################################################

    ( jade | ada | vayu | curie | occigen | occigen2 )

    chkdir() {  mkdir -p $1 ;}

    submit() {
       if [ $MACHINE = jade     ] ; then  qsub     $1 ; fi
       if [ $MACHINE = vayu     ] ; then  qsub     $1 ; fi
       if [ $MACHINE = ada      ] ; then  llsubmit $1 ; fi
       if [ $MACHINE = curie    ] ; then  ccc_msub $@ ; fi
       if [ $MACHINE = occigen  ] ; then  sbatch   $@ ; fi
       if [ $MACHINE = occigen2 ] ; then  sbatch   $@ ; fi
             }

    monthly() { m=$1  ; mm=$(printf "%02d" $m )
       cd $MOYTMPDIR/$year
       chkdir $MOYTMPDIR/$year/$mm
       cd $MOYTMPDIR/$year/$mm
       ln -s $P_S_DIR/$year/*y${year}m${mm}d??${xiosid}*.nc .
       for typ in $TYP_LIST ; do
         echo TYP : $typ
         echo  $CDFTOOLS/cdfmoy -l ${CONFCASE}_y${year}m${mm}d??${xiosid}_${typ}.nc -o  ${CONFCASE}_y${year}m${mm}${xiosid}_${typ}
         $CDFTOOLS/cdfmoy -l ${CONFCASE}_y${year}m${mm}d??${xiosid}_${typ}.nc -o ${CONFCASE}_y${year}m${mm}${xiosid}_${typ} $NCOPT $VVLOPT
         case $typ in 
          ( gridT | gridU | gridV | gridW  )  ;; # nothing to do
          ( * ) ; rm  ${CONFCASE}_y${year}m${mm}${xiosid}_${typ}2.nc  ;;
         esac
         \rm ${CONFCASE}_y${year}m${mm}d??${xiosid}_${typ}.nc
       done ;}

    monthlyvt() { m=$1  ; mm=$(printf "%02d" $m )
       cd $VTTMPDIR/$year
       chkdir $VTTMPDIR/$year/$mm
       cd $VTTMPDIR/$year/$mm
       ln -s $P_S_DIR/$year/${CONFCASE}_y${year}m${mm}d??${xiosid}_grid[UVT].nc .
       taglist=''
       for f in ${CONFCASE}_y${year}m${mm}d??${xiosid}_gridT.nc ; do
         tag=$(echo ${f%_gridT.nc} | awk -F_ '{ print $2 }' ) ; taglist="$taglist $tag"
       done
         $CDFTOOLS/cdfvT -c ${CONFCASE} -l $taglist -o ${CONFCASE}_y${year}m${mm}${xiosid}_VT.nc $NCOPT $VVLOPT
         \rm ${CONFCASE}_y${year}m${mm}d??${xiosid}_grid[UVT].nc ; }

    annual() { cd $MOYTMPDIR/$year
       TYP_LIST=$(get_typ_list)
       for typ in $TYP_LIST ; do
        for m in $(seq 1 12 ) ; do
          mm=$(printf "%02d" $m )
          ln -sf $mm/${CONFCASE}_y${year}m${mm}${xiosid}_${typ}.nc .
          ln -sf $mm/${CONFCASE}_y${year}m${mm}${xiosid}_${typ}2.nc .
        done
        $CDFTOOLS/cdfmoy_weighted -l ${CONFCASE}_y${year}m??${xiosid}_${typ}.nc -o  ${CONFCASE}_y${year}${xiosid}_${typ}.nc $NCOPT $VVLOPT
        case $typ in 
         ( gridT | gridU | gridV | gridW  )  
           $CDFTOOLS/cdfmoy_weighted -l ${CONFCASE}_y${year}m??${xiosid}_${typ}2.nc -o ${CONFCASE}_y${year}${xiosid}_${typ}2.nc $NCOPT $VVLOPT ;;
        esac
        \rm -f ${CONFCASE}_y${year}m??${xiosid}_${typ}.nc
        \rm -f ${CONFCASE}_y${year}m??${xiosid}_${typ}2.nc
       done ; }

    annualvt() { cd $VTTMPDIR/$year
        typ=VT
        for m in $(seq 1 12 ) ; do
          mm=$(printf "%02d" $m )
          ln -sf $mm/${CONFCASE}_y${year}m${mm}${xiosid}_${typ}.nc .
        done
        $CDFTOOLS/cdfmoy_weighted -l ${CONFCASE}_y${year}m??${xiosid}_${typ}.nc -o ${CONFCASE}_y${year}${xiosid}_${typ}.nc  $NCOPT $VVLOPT
        \rm -f ${CONFCASE}_y${year}m??${xiosid}_${typ}.nc ; }

    interannual() {  set -x ; chkdir $MOYTMPDIR
        chkdir $MOYTMPDIR/$1-$2
        cd $MOYTMPDIR/$1-$2

        chkdir $MEANDIR/$1-$2

        for typ in $TYP_LIST ; do
          # monthly climatology
          for m in $( seq 1 12 ) ; do
             mm=$( printf "%02d" $m )
             for year in $( seq $1 $2 ) ; do
                ln -sf $MEANDIR/$year/${CONFCASE}_y${year}m${mm}${xiosid}_${typ}.nc .
             done
             $CDFTOOLS/cdfmoy_weighted -l ${CONFCASE}_y????m${mm}${xiosid}_${typ}.nc -o $MEANDIR/$1-$2/${CONFCASE}_y$1-${2}m${mm}${xiosid}_${typ}.nc $NCOPT $VVLOPT
             rm ${CONFCASE}_y????m${mm}${xiosid}_${typ}.nc

             case $typ in
             ( gridT | gridU | gridV | gridW  )
                for year in $( seq $1 $2 ) ; do
                   ln -sf $MEANDIR/$year/${CONFCASE}_y${year}m${mm}${xiosid}_${typ}2.nc .
                done
                $CDFTOOLS/cdfmoy_weighted -l ${CONFCASE}_y????m${mm}${xiosid}_${typ}2.nc -o $MEANDIR/$1-$2/${CONFCASE}_y$1-${2}m${mm}${xiosid}_${typ}2.nc $NCOPT $VVLOPT
                rm ${CONFCASE}_y????m${mm}${xiosid}_${typ}2.nc ;;
             esac
          done
        done

        # inter annual climatology
        for typ in $TYP_LIST MOC EKE PSI ; do
           for year in $( seq $1 $2 ) ; do
              ln -sf $MEANDIR/$year/${CONFCASE}_y${year}${xiosid}_${typ}.nc .
           done
   
           $CDFTOOLS/cdfmoy_weighted -l ${CONFCASE}_y????${xiosid}_${typ}.nc -o $MEANDIR/$1-$2/${CONFCASE}_y$1-${2}${xiosid}_${typ}.nc $NCOPT $VVLOPT
   
           case $typ in
           ( gridT | gridU | gridV | gridW  )
               for year in $( seq $1 $2 ) ; do
                  ln -sf $MEANDIR/$year/${CONFCASE}_y${year}${xiosid}_${typ}2.nc .
               done
               $CDFTOOLS/cdfmoy_weighted -l ${CONFCASE}_y????${xiosid}_${typ}2.nc -o $MEANDIR/$1-$2/${CONFCASE}_y$1-${2}${xiosid}_${typ}2.nc $NCOPT $VVLOPT
               rm ${CONFCASE}_y????${xiosid}_${typ}2.nc ;;
           esac
        done
        # extra variables only existing for m03 and m09
        for typ in MXL LSPV ; do
          # monthly climatology
          for m in 3  9 ; do
             mm=$( printf "%02d" $m )
             for year in $( seq $1 $2 ) ; do
                ln -sf $MEANDIR/$year/${CONFCASE}_y${year}m${mm}${xiosid}_${typ}.nc .
             done
             $CDFTOOLS/cdfmoy_weighted -l ${CONFCASE}_y????m${mm}${xiosid}_${typ}.nc -o $MEANDIR/$1-$2/${CONFCASE}_y$1-${2}m${mm}${xiosid}_${typ}.nc $NCOPT $VVLOPT
             rm ${CONFCASE}_y????m${mm}${xiosid}_${typ}.nc

          done
        done
        # compute standard deviation for gridT (useful for contour diagnostics)
        typ=gridT
        for year in $( seq $1 $2 ) ; do
          ln -sf $MEANDIR/$year/${CONFCASE}_y${year}${xiosid}_${typ}.nc .
        done
        $CDFTOOLS/cdfstd -l ${CONFCASE}_y????${xiosid}_${typ}.nc -o $MEANDIR/$1-$2/${CONFCASE}_y$1-${2}${xiosid}_${typ}_STD.nc $NCOPT
        rm ${CONFCASE}_y????${xiosid}_${typ}.nc 
                   }

    save_nc() {
       case $MACHINE in 
       ( ada | adapp ) 
           rsh ergon "mkdir -p $1"
           for f in *.nc ; do
               mfput $f $1
           done ;;

       ( * )
          echo save_nc empty function for $MACHINE ;;
       esac
              }

    echo "functions for $MACHINE successfully loaded" ;;

##############################################################################

    ( 'ulam' | 'vargas' )

    chkdir() { if [ ! -d $1 ] ; then mkdir $1 ; fi ;}

    submit() {
        llsubmit $1
             }

    # chkdirg  path : check existence of directory path  on (remote) archiving machine. If it does not exist, create it.
    chkdirg() { rsh ergon -l $REMOTE_USER " if [ ! -d $1 ] ; then mkdir $1 ; fi " ; }

    # getmonth  mm type : retrieve all 5 days average files for month mm and grid type 'type', 
    # corresponding to current year, current confcase.A
    #                     ex: getmonth 04 gridU  : retrieve all april files for gridU
    getmonth() { for f  in $( ls $SDIR/$P_S_DIR/$year/ | grep ${CONFCASE}_y${year}m${1} | grep $2.nc )  ; do
                     mfget -u $REMOTE_USER $P_S_DIR/$year/$f ./
                 done  ; }
    # putmonth mm type : write back monthly mean for month mm type 'type' on remote machine in -MEAN/YEAR/ directory.
    #                    also move the localfile to local MONTHLY dir for further annual mean computing

    putmonth() { mfput -u $REMOTE_USER cdfmoy.nc $MEANDIR/$year/${CONFCASE}_y${year}m${1}_$2.nc ;\
                 mv cdfmoy.nc ../${CONFCASE}_y${year}m${1}_$2.nc ; } #\rm ${CONFCASE}_y${year}m${1}d??_$2.nc ; }

    # putmonth2 mm type : write back monthly quadratic  mean for month mm type 'type' on remote machine in -MEAN/YEAR/ dir
    #                    also move the localfile to local MONTHLY dir for further annual mean computing
    putmonth2() { mfput -u $REMOTE_USER cdfmoy2.nc $MEANDIR/$year/${CONFCASE}_y${year}m${1}_${2}2.nc ; \
                  mv cdfmoy2.nc ../${CONFCASE}_y${year}m${1}_${2}2.nc ; }

    # putannual type : write annual MEAN to remote -MEAN dir, in the corresponding year.
    putannual() { mv cdfmoy_weighted.nc ${CONFCASE}_y${year}_$1.nc
                  mfput -u $REMOTE_USER ${CONFCASE}_y${year}_$1.nc  $MEANDIR/$year/${CONFCASE}_y${year}_$1.nc ;}

    # putvtmonth mm : write back monthly mean for month mm type 'VT' on remote machine in -MEAN/YEAR/ directory.
    #                    also move the localfile to local MONTHLY dir for further annual mean computing
    putvtmonth() { mfput -u $REMOTE_USER vt.nc $MEANDIR/$year/${CONFCASE}_y${year}m${1}_VT.nc ; \
                   mv vt.nc ../${CONFCASE}_y${year}m${1}_VT.nc ; } #\rm ${CONFCASE}_y${year}m${1}d??_grid[UVT].nc ; }

    # putvtannual type : write annual MEAN to remote -MEAN dir, in the corresponding year.
    putvtannual() { mv cdfmoy_weighted.nc ${CONFCASE}_y${year}_VT.nc ;
                    mfput -u $REMOTE_USER ${CONFCASE}_y${year}_VT.nc  $MEANDIR/$year/${CONFCASE}_y${year}_VT.nc ; }


    ### META functions :
    monthly() { mm=$1  
       cd $TMPDIR/$MOYTMPDIR/$year
       chkdir $TMPDIR/$MOYTMPDIR/$year/$mm
       cd $TMPDIR/$MOYTMPDIR/$year/$mm

       for typ in $TYP_LIST ; do
         getmonth $mm $typ
         $CDFTOOLS/cdfmoy -l ${CONFCASE}_y${year}m${mm}d??_${typ}.nc $NCOPT $VVLOPT
         putmonth $mm $typ
         case $typ in 
          gridT | gridU | gridV | gridW  ) 
             putmonth2 $mm $typ ;;
         esac
       done ;}

    monthlyvt() { mm=$1  
       cd $TMPDIR/$VTTMPDIR/$year
       chkdir $TMPDIR/$VTTMPDIR/$year/$mm
       cd $TMPDIR/$VTTMPDIR/$year/$mm
       
       getmonth $mm gridT ; getmonth $mm gridU ; getmonth $mm gridV
       taglist=''
       for f in ${CONFCASE}_y${year}m${mm}d??_gridT.nc ; do
         tag=$(echo ${f%_gridT.nc} | awk -F_ '{ print $2 }' ) ; taglist="$taglist $tag"
       done
         $CDFTOOLS/cdfvT -c ${CONFCASE} -l $taglist $NCOPT $VVLOPT
         putvtmonth $mm ; }

    annual() { cd $TMPDIR/$MOYTMPDIR/$year
       for typ in $TYP_LIST ; do
        $CDFTOOLS/cdfmoy_weighted -l ${CONFCASE}_y${year}m??_${typ}.nc $NCOPT $VVLOPT
        putannual $typ
        case $typ in 
         gridT | gridU | gridV | gridW  ) 
           $CDFTOOLS/cdfmoy_weighted -l ${CONFCASE}_y${year}m??_${typ}2.nc $NCOPT $VVLOPT
           putannual ${typ}2 ;;
        esac
       done ; }

    annualvt() { cd $TMPDIR/$VTTMPDIR/$year
        typ=VT
        $CDFTOOLS/cdfmoy_weighted -l ${CONFCASE}_y${year}m??_${typ}.nc  $NCOPT $VVLOPT
        putvtannual ; }

    echo "functions for $MACHINE successfully loaded" ;;

    ( * )
    echo available machines are jade ada vayu curie occigen occigen2 ulam vargas ; exit 1 ;;

esac

