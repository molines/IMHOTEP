#!/bin/bash
##     ***  script  function_def  ***
##  define functions for DMONTOOLS/MONITOR_PROD scripts
## =====================================================================
## History : 1.0  !  2008     J.M. Molines      Original  code
##           2.0  !  2012     all contrib       Rationalization
## ----------------------------------------------------------------------
##  DMONTOOLS_2.0 , MEOM 2012
##  $Id: function_def 540 2012-12-19 14:08:40Z molines $
##  Copyright (c) 2012, J.-M. Molines
##  Software governed by the CeCILL licence (Licence/DMONTOOLSCeCILL.txt)
## ----------------------------------------------------------------------
##
## machine dependent functions : each machine has its own set of functions
##          supported machine : jade, ada, ulam, meolkerg, vargas, desktop
## generic script functions : valid on any unix system
##
# set general options after config_def sourced
NC4=${NC4:=0}
if [ $NC4 = 1 ] ; then NCOPT='-nc4' ; fi

##########################################################################
# (1) Machine dependent functions

case $MACHINE in

##########################################################################

    ( jade | occigen | occigen2 | curie | meolkerg | jean-zay)

# jade version: all is supposed to be in WORKDIR
 
# CHKDIRG : check the existence of a directory on the Storage machine.
chkdirg() { if [ ! -d $DDIR/$1 ] ; then mkdir $DDIR/$1 ; fi ; }

# CHKFILE : check if a file exists on the storage machine, return present or absent.
chkfile() {  if [ -f $DDIR/$1 ] ; then echo present ;\
                       else echo absent ; fi  ; }

# CHKDIR  : check the existence of a directory. Create it if not present
chkdir() { if [ ! -d $1 ] ; then mkdir $1 ; fi  ; }

# RAPATRIE : get file $1 from directory $2   to local dir, and name it $3
#            directory $2 is normally on the Storage machine
rapatrie() { ln -sf $DDIR/$2/$1 $3 ; }

# RAPATRIE_5d : get 5-day averaged file for a given grid $1 from directory $2 
#               directory $2 is normally on the Storage machine
rapatrie_5d() { for f  in $DDIR/$2/${CONFCASE}_$3*_$1.nc    ; do
                 file=`basename $f`
                 ln -sf $DDIR/$2/$file .
                done  ; }

# EXPATRIE : put file $1 to directory $2 with name $3
expatrie() { cp $1 $DDIR/$2/$3 ; }


# CHKDIRW : check the existence of a dir. on the web site. Create it if not present
chkdirw() { ssh drakkar@ige-meom-drakkar.u-ga.fr " if [ ! -d DRAKKAR/$1 ] ; \
            then mkdir DRAKKAR/$1 ; fi " ; }

submit() {
     if [ $MACHINE = jade      ] ; then  qsub     $1 ; fi
     if [ $MACHINE = occigen   ] ; then  sbatch   $1 ; fi
     if [ $MACHINE = 'jean-zay' ] ; then  sbatch   $1 ; fi
     if [ $MACHINE = curie     ] ; then  ccc_msub $1 ; fi
     if [ $MACHINE = meolkerg  ] ; then  ./$1 ; fi
         }


echo "functions for machine $MACHINE successfully loaded" ;;

    ada  )

# ada version: all is supposed to be in WORKDIR

# CHKDIRG : check the existence of a directory on the Storage machine.
chkdirg() { if [ ! -d $WORKDIR/$1 ] ; then mkdir $WORKDIR/$1 ; fi ; }

# CHKFILE : check if a file exists on the storage machine, return present or absent.
chkfile() {  if [ -f $WORKDIR/$1 ] ; then echo present ;\
                       else echo absent ; fi  ; }

# CHKDIR  : check the existence of a directory. Create it if not present
chkdir() { if [ ! -d $1 ] ; then mkdir $1 ; fi  ; }

# RAPATRIE : get file $1 from directory $2   to local dir, and name it $3
#            directory $2 is normally on the Storage machine
rapatrie() { ln -sf $WORKDIR/$2/$1 $3 ; }

# RAPATRIE_5d : get 5-day averaged file for a given grid $1 from directory $2
#               directory $2 is normally on the Storage machine
rapatrie_5d() { for f  in $WORKDIR/$2/${CONFCASE}_$3*_$1.nc    ; do
                 file=`basename $f`
                 ln -sf $WORKDIR/$2/$file .
                done  ; }

# EXPATRIE : put file $1 to directory $2 with name $3
expatrie() { cp $1 $WORKDIR/$2/$3 ; }


# CHKDIRW : check the existence of a dir. on the web site. Create it if not present
chkdirw() { ssh drakkar@ige-meom-drakkar.u-ga.fr " if [ ! -d DRAKKAR/$1 ] ; \
            then mkdir DRAKKAR/$1 ; fi " ; }


submit() {  llsubmit $1 ;}


echo "functions for machine $MACHINE successfully loaded" ;;


##############################################################################

    'desktop')

# desktop version: all is supposed to be in SDIR of the local machine
 
# CHKDIRG : check the existence of a directory on the Storage machine.
chkdirg() { if [ ! -d $SDIR/$1 ] ; then mkdir $SDIR/$1 ; fi ; }

# CHKFILE : check if a file exists on the storage machine, return present or absent.
chkfile() {  if [ -f $SDIR/$1 ] ; then echo present ;\
                       else echo absent ; fi  ; }

# CHKDIR  : check the existence of a directory. Create it if not present
chkdir() { if [ ! -d $1 ] ; then mkdir $1 ; fi  ; }

# RAPATRIE : get file $1 from directory $2   to local dir, and name it $3
#            directory $2 is normally on the Storage machine
rapatrie() { ln -sf $SDIR/$2/$1 $3 ; }

# RAPATRIE_5d : get 5-day averaged file for a given grid $1 from directory $2 
#               directory $2 is normally on the Storage machine
rapatrie_5d() { for f  in $SDIR/$2/${CONFCASE}_$3*_$1.nc    ; do
                 file=`basename $f`
                 ln -sf $SDIR/$2/$file .
                done  ; }

# EXPATRIE : put file $1 to directory $2 with name $3
expatrie() { cp $1 $SDIR/$2/$3 ; }

# CHKDIRW : check the existence of a dir. on the web site. Create it if not present
chkdirw() { ssh drakkar@ige-meom-drakkar.u-ga.fr " if [ ! -d DRAKKAR/$1 ] ; \
            then mkdir DRAKKAR/$1 ; fi " ; }

submit() {  ./$1 ;}

echo "functions for machine $MACHINE successfully loaded" ;;

##############################################################################

    'ulam' )

# CHKDIRG : check the existence of a directory on the Storage machine.
chkdirg() { if [ ! -d $SDIR/$1 ] ; then mkdir $SDIR/$1 ; fi  ; }

# CHKFILE : check if a file exists on the storage machine, return present or absent.
chkfile() {  if [ -f $SDIR/$1 ] ; then echo present ;\
                       else echo absent ; fi  ; }

# CHKDIR  : check the existence of a directory. Create it if not present
chkdir() { if [ ! -d $1 ] ; then mkdir $1 ; fi  ; }

# RAPATRIE : get file $1 from directory $2   to local dir, and name it $3
#            directory $2 is normally on the Storage machine
rapatrie() { if [ ! -f $3 ] ; then mfget -u $REMOTE_USER $2/$1 $3 ; else echo $3 is already \
            downloaded ; fi ; }

# RAPATRIE_5d : get 5-day averaged file for a given grid $1 from directory $2 
#               directory $2 is normally on the Storage machine
rapatrie_5d() { for f  in $( rsh ergon -l $REMOTE_USER ls $2/*_$1.nc ) ; do
                 file=`basename $f`
                 mfget -u $REMOTE_USER $2/$file .
                done  ; }

# EXPATRIE : put file $1 to directory $2 with name $3
expatrie() { mfput -u $REMOTE_USER $1 $2/$3 ; }

# CHKDIRW : check the existence of a dir. on the web site. Create it if not present
chkdirw() { ssh drakkar@ige-meom-drakkar.u-ga.fr " if [ ! -d DRAKKAR/$1 ] ; \
            then mkdir DRAKKAR/$1 ; fi " ; }

submit() {  llsubmit $1 ;}

echo "functions for machine $MACHINE successfully loaded" ;;

##############################################################################

    'vargas')

# CHKDIRG : check the existence of a directory on the Storage machine.
chkdirg() { rsh ergon -l $REMOTE_USER " if [ ! -d $1 ] ; then mkdir $1 ; fi " ; }

# CHKFILE : check if a file exists on the storage machine, return present or absent.
chkfile() { rsh ergon -l $REMOTE_USER " if [ -f $1 ] ; then echo present ;\
                       else echo absent ; fi " ; }

# CHKDIR  : check the existence of a directory. Create it if not present
chkdir() { if [ ! -d $1 ] ; then mkdir $1 ; fi  ; }

# RAPATRIE : get file $1 from directory $2   to local dir, and name it $3
#            directory $2 is normally on the Storage machine
rapatrie() { if [ ! -f $3 ] ; then mfget -u $REMOTE_USER $2/$1 $3 ; else echo $3 is already \
            downloaded ; fi ; }

# RAPATRIE_5d : get 5-day averaged file for a given grid $1 from directory $2 
#               directory $2 is normally on the Storage machine
rapatrie_5d() { for f  in $( rsh ergon -l $REMOTE_USER ls $2/${CONFCASE}_$3*_$1.nc ) ; do
                 file=`basename $f`
                 mfget -u $REMOTE_USER $2/$file .
                done  ; }

# EXPATRIE : put file $1 to directory $2 with name $3
expatrie() { mfput -u $REMOTE_USER $1 $2/$3 ; }

# CHKDIRW : check the existence of a dir. on the web site. Create it if not present
chkdirw() { ssh drakkar@ige-meom-drakkar.u-ga.fr " if [ ! -d DRAKKAR/$1 ] ; \
            then mkdir DRAKKAR/$1 ; fi " ; }

submit() {  llsubmit $1 ;}

echo "functions for machine $MACHINE successfully loaded" ;;

    *)
    echo available machines are jade ada meolkerg desktop ulam vargas ; exit 1 ;;
esac

######################################################################################
### 2) common functions : only shell functions indep of machine

# check if a variable is available within a cdf file :chkvar var file
#  return 0 if available, 1 if not available
chkvar()   {
   cdfinfo -f $2 | grep -q $1
   echo $?
           }
######################################################################################
# copy_to_web : copy the time series figures to the DRAKKAR website
# usage : copy_to_web file
copy_to_web() {
          ssh ige-meom-drakkar.u-ga.fr -l drakkar \
         " if [ ! -d DRAKKAR/$CONFIG/${CONFIG}-${CASE}/TIME_SERIES ] ; then mkdir -p  DRAKKAR/$CONFIG/${CONFIG}-${CASE}/TIME_SERIES ; fi "
          scp $@ drakkar@ige-meom-drakkar.u-ga.fr:DRAKKAR/$CONFIG/${CONFIG}-${CASE}/TIME_SERIES/ ;}

